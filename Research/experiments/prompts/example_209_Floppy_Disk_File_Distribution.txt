You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 209
- Name: Floppy Disk File Distribution
- Domain: Resource Allocation
- Objective: minimization

Problem Description:
How to distribute these files on the floppy disks in order to minimize the number of floppy disks used, given that each floppy disk has a Capacity and there are N different files with sizes represented by Size.


Input Data (data.dzn):
capacity = 3;
size = [1, 2, 0.5, 1.5, 2.5];

MiniZinc Model:
% Parameters
int: capacity; % Capacity of each floppy disk
array[1..N] of int: size; % Size of each file

% Decision Variables
var 1..N: n_disks; % Total number of floppy disks used
array[1..N] of var 1..N: whichdisk; % On which disk each file is distributed

% Constraints
constraint forall(i in 1..N)(sum(j in 1..N)(if whichdisk[j] = i then size[j] else 0 endif) <= capacity);
constraint forall(i in 1..N-1)(sum(j in 1..N)(if whichdisk[j] = i then 1 else 0 endif) >= sum(j in 1..N)(if whichdisk[j] = i+1 then 1 else 0 endif));

% Objective
solve minimize n_disks;

% Output
output ["n_disks: ", show(n_disks), "\n", "whichdisk: ", show(whichdisk)];

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.