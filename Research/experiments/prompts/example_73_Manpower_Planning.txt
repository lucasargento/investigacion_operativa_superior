You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 73
- Name: Manpower Planning
- Domain: Healthcare and Human Systems
- Objective: minimization

Problem Description:
A company is undergoing a number of changes that will affect its manpower requirements in future years. Owing to the installation of new machinery, fewer unskilled but more skilled and semi-skilled workers will be required. In addition to this, a downturn in trade is expected in the next year, which will reduce the need for workers in all categories. There is an estimated manpower requirement for each type of worker for each year. The current manpower of workers in each category is known. The company wishes to decide its policy with regard to recruitment, retraining, redundancy and short-time working in the next years. However, there is a natural wastage of labour.  A fairly large number of workers leave during their first year. After this, the rate of leaving is much smaller. Taking this into account, we know the wastage rate of manpower with less than one year's service in each worker category. There has been no recent recruitment and all the workers in the current labour force have been employed for more than one year. However, it is possible to recruit a limited number of workers from outside. In any one year, there is a maximum limit on the manpower that can be recruited in each category. There is also a redundancy payment in each category. It is possible to employ up to a maximum limit more workers over the whole company than are needed, but there are extra costs per employee per year for each category of worker. Additionally, there is a maximum number of workers in each category of skill that can be put on short-term working. The cost of thie (per employee per year) is fixed for each category. An employee on short-time working meets the production requirements of half a full-time employee. The companyâ€™s declared objective is to minimize redundancy. How should they operate in order to do this?


Input Data (data.dzn):
Requirement = array2d(1..3, 1..3, [1000, 1400, 1000, 500, 2000, 1500, 0, 2500, 2000]);
Strength = [2000, 1500, 1000];
LessOneWaste = [0.25, 0.2, 0.1];
MoreOneWaste = [0.1, 0.05, 0.05];
Recruit = [500, 800, 500];
CostRedundancy = [200, 500, 500];
NumOverman = 150;
CostOverman = [1500, 2000, 3000];
NumShortwork = 50;
CostShort = [500, 400, 400];


MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 1438383.0
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.