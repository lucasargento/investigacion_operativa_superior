You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 535
- Name: Marriage Theorem
- Domain: Optimization
- Objective: maximization

Problem Description:
Tom Cruise, Freddy Prinze Jr, Harrison Ford, and Matt LeBlanc are marooned on a desert island with Jennifer Anniston, Courtney Cox, Gwynneth Paltrow, and Julia Roberts. A 'compatibility matrix' indicates how much happiness each couple would experience if they spend all their time together. The happiness earned by a couple is proportional to the fraction of time they spend together. The optimal solution requires that each person spend all their time with one person of the opposite sex, so this result is often referred to as the Marriage Theorem. The goal is to maximize the total happiness, represented by the 'total_cost' variable, by assigning each male to a female such that each person is paired with exactly one person of the opposite sex.


MiniZinc Model:
int: rows; 
int: cols;
array[1..rows, 1..cols] of var 0..1: x;
array[1..rows, 1..cols] of int: cost;
array[1..rows] of 1..rows: male;
array[1..cols] of 1..cols: female;

var int: total_cost = sum(i in 1..rows, j in 1..cols) (x[i,j]*cost[i,j]);

solve maximize  total_cost;
% solve satisfy;

constraint 
 forall(i in 1..rows) (
        sum(j in 1..cols) (x[i,j]) = 1
  )
  /\
 forall(j in 1..cols) (
        sum(i in 1..rows) (x[i,j]) = 1
 )
%  /\ total_cost = 30 % for solve satisfy
;

rows= 4;
cols= 4;

male = [1,2,3,4];
% 1 "Tom Cruise"
% 2 "Freddie Prinz Jr"
% 3 "Harrison Ford"
% 4 "Mark LeBlanc"
%;

female = [1,2,3,4];
% 1 "Jennifer Anniston"
% 2 "Courtney Cox"
% 3 "Gwynneth Paltrow"
% 4 "Julia Roberts"
%;

cost= 
[|7, 5, 8, 2,
 |7, 8, 9, 4,
 |3, 5, 7, 9,
 |5, 5, 6, 7
|]
;


output [
   if i = 1 /\ j = 1 then 
     "\ntotal_cost: " ++ show(total_cost) else "" endif 
   ++
   if j = 1 then "\n" else " " endif ++ 
   show(x[i,j])

   | i in 1..rows, j in 1..cols
] ++ ["\n"];

Expected Output:
{
  "x": [
    [
      0,
      0,
      1,
      0
    ],
    [
      0,
      1,
      0,
      0
    ],
    [
      0,
      0,
      0,
      1
    ],
    [
      1,
      0,
      0,
      0
    ]
  ],
  "_objective": 30
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.