You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 403
- Name: Medicine Package Optimization
- Domain: Healthcare
- Objective: maximization

Problem Description:
A TCM company makes powdered medicine in two different packages , a regular package and premium package , to sell to TCM doctors . The regular package requires 100 g of medicinal herbs and 30 seconds of drying . A premium package requires 130 units of medicinal herbs and 60 seconds of drying . The company has available 9000 units of medicinal herbs and has available 3500 seconds in the drying machine . Since the premium package sells better , the number of regular packages must be less than the number of premium packages . In addition , the company must make at least 15 regular packages . If a regular package can treat 2 people and a premium batch can treat 3 people , how many of each type of package should be made to maximize the number of people that can be treated ?


MiniZinc Model:
include "globals.mzn";

% number of regular packages
var int: regular;
% number of premium packages
var int: premium;

% number of packages must be non-negative
constraint regular >= 0;
constraint premium >= 0;

% 9000 units of medicinal herbs are available
% a regular package requires 100 grams of medicinal herbs and a premium package requires 130 grams of medicinal herbs
constraint regular * 100 + premium * 130 <= 9000;

% 3500 seconds are available in the drying machine
% a regular package requires 30 seconds of drying time and a premium package requires 60 seconds of drying time
constraint regular * 30 + premium * 60 <= 3500;

% number of regular packages must be less than the number of premium packages
constraint regular < premium;

% the company must make at least 15 regular packages
constraint regular >= 15;

% a regular package can treat 2 people and a premium package can treat 3 people
var int: total_people = regular * 2 + premium * 3;

solve maximize total_people;

output ["Regular Packages: " ++ show(regular) ++ "\n", "Premium Packages: " ++ show(premium) ++ "\n", "Total People: " ++ show(total_people) ++ "\n"];

Expected Output:
{
  "regular": 38,
  "premium": 39,
  "_objective": 193
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.