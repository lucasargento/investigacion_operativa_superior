You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 202
- Name: Auto Parts Manufacturer Optimization
- Domain: Manufacturing
- Objective: maximization

Problem Description:
How many batches of each part should the manufacturer produce each month to maximize profit? The manufacturer has M machines and P parts to be produced. Each machine m has an associated cost of MachineCosts, time requirement TimeRequired, and availability Availability per month. Each part p has a selling price Prices and a production minimum requirement MinBatches.


Input Data (data.dzn):
time_required = [|2, 1, 3, 2|4, 2, 1, 2|6, 2, 1, 2|];
machine_costs = [160, 10, 15];
availability = [200, 300, 500];
prices = [570, 250, 585, 430];
min_batches = [10, 10, 10, 10];

MiniZinc Model:
% Define parameters
int: M; % Number of machines
int: P; % Number of parts
array[1..M, 1..P] of int: time_required; % Time required by each machine to produce each part
array[1..M] of int: machine_costs; % Cost of using each machine
array[1..M] of int: availability; % Availability of each machine
array[1..P] of int: prices; % Selling price of each part
array[1..P] of int: min_batches; % Minimum batches of each part to be produced

% Define decision variables
array[1..P] of var min_batches[1..P]..sum(i in 1..M)(availability[i] div time_required[i, 1..P]): batches; % Number of batches of each part to be produced

% Define objective function
var int: total_profit = sum(p in 1..P)(prices[p] * batches[p]) - sum(m in 1..M)(machine_costs[m] * sum(p in 1..P)(time_required[m, p] * batches[p]));

% Define constraints
constraint forall(m in 1..M-1)(sum(p in 1..P)(time_required[m, p] * batches[p]) <= availability[m]); % Machine availability constraint
constraint sum(p in 1..P)(time_required[M, p] * batches[p]) + sum(p in 1..P)(time_required[M-1, p] * batches[p]) <= availability[M]; % Shared availability constraint for last two machines

% Maximize total profit
solve maximize total_profit;

% Output solution
output ["batches: ", show(batches), "\ntotal_profit: ", show(total_profit)];

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.