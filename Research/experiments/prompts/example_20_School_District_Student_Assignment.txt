You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 20
- Name: School District Student Assignment
- Domain: Scheduling
- Objective: minimization

Problem Description:
Consider a school district with several neighborhoods, schools, and grades at each school. Each school has a capacity for each grade. For each neighborhood, we are given the student population for each grade. Finally, we are given the distance of each school from each neighborhood. We want to assign all students to schools while minimizing the total distance traveled by all students. We may ignore the fact that numbers of students must be integers.


Input Data (data.dzn):
S = 3;
G = 2;
N = 4;
Capacity = array2d(1..3, 1..2, [15, 20, 20, 15, 5, 17]);
Population = array2d(1..4, 1..2, [7, 19, 4, 12, 9, 2, 6, 8]);
Distance = array2d(1..4, 1..3, [5.2, 4.0, 3.1, 3.8, 5.5, 6.1, 4.2, 3.5, 5.0, 5.0, 4.1, 3.2]);


MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 240.9
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.