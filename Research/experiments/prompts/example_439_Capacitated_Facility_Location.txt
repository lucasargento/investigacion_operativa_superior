You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 439
- Name: Capacitated Facility Location
- Domain: Operations Research
- Objective: minimization

Problem Description:
Capacitated facility location problems deal with locating NumberOfFacilities facilities to serve NumberOfCustomers customers, at minimum total cost. Considering potential facility locations and customer zones as fixed points in a network, each facility has a fixed FacilityFixedCost and a FacilityCapacity. Furthermore, there exists a CustomerDemand for each customer zone, and a FacilityToCustomerTransportCost representing the cost of transport between facilities and customer zones.


Input Data (data.dzn):
NumberOfFacilities = 10;
NumberOfCustomers = 20;
FacilityFixedCost = [8517, 5068, 9433, 6127, 6033, 5966, 7762, 9406, 6602, 7040];
FacilityToCustomerTransportCost = [|80, 94, 44, 51, 190, 44, 129, 178, 129, 91, 172, 119, 177, 150, 90, 51, 53, 97, 184, 87|139, 33, 104, 135, 50, 176, 97, 121, 47, 29, 186, 163, 149, 108, 156, 169, 100, 160, 153, 85|153, 36, 18, 170, 18, 181, 178, 68, 171, 106, 159, 110, 21, 106, 91, 29, 144, 140, 155, 116|103, 59, 78, 125, 14, 11, 152, 95, 76, 173, 36, 148, 75, 132, 59, 153, 113, 74, 185, 71|193, 186, 130, 145, 114, 150, 33, 154, 20, 75, 103, 30, 137, 131, 167, 32, 53, 150, 176, 166|159, 130, 156, 65, 36, 59, 199, 124, 104, 72, 180, 73, 43, 152, 143, 90, 161, 65, 172, 141|173, 121, 110, 127, 22, 159, 195, 137, 47, 10, 87, 11, 154, 66, 126, 60, 152, 54, 20, 25|181, 34, 186, 152, 109, 195, 133, 198, 30, 65, 69, 19, 109, 143, 108, 196, 59, 133, 10, 123|82, 113, 147, 21, 88, 24, 38, 16, 70, 122, 148, 192, 116, 108, 18, 20, 143, 18, 116, 142|176, 170, 87, 91, 195, 183, 124, 89, 72, 97, 89, 23, 45, 196, 97, 27, 83, 81, 171, 148|];
FacilityCapacity = [301, 291, 453, 472, 492, 375, 493, 297, 331, 246];
CustomerDemand = [117, 86, 69, 53, 110, 74, 136, 140, 126, 79, 54, 86, 114, 76, 136, 73, 144, 51, 53, 120];

MiniZinc Model:
% Parameters
int: NumberOfFacilities;
int: NumberOfCustomers;
array[1..NumberOfFacilities] of int: FacilityFixedCost;
array[1..NumberOfFacilities, 1..NumberOfCustomers] of int: FacilityToCustomerTransportCost;
array[1..NumberOfFacilities] of int: FacilityCapacity;
array[1..NumberOfCustomers] of int: CustomerDemand;

% Decision Variables
array[1..NumberOfFacilities, 1..NumberOfCustomers] of var 0..1: x; % x[i,j] = 1 if facility i serves customer j
array[1..NumberOfFacilities] of var 0..1: y; % y[i] = 1 if facility i is open

% Constraints
% Each customer is served by exactly one facility
constraint forall(j in 1..NumberOfCustomers) (
    sum(i in 1..NumberOfFacilities) (x[i,j]) = 1
);

% Facility capacity constraints
constraint forall(i in 1..NumberOfFacilities) (
    sum(j in 1..NumberOfCustomers) (x[i,j] * CustomerDemand[j]) <= FacilityCapacity[i] * y[i]
);

% If a facility is not open, it cannot serve any customers
constraint forall(i in 1..NumberOfFacilities, j in 1..NumberOfCustomers) (
    x[i,j] <= y[i]
);

% Objective Function: Minimize total cost
var int: total_cost = sum(i in 1..NumberOfFacilities) (y[i] * FacilityFixedCost[i]) + sum(i in 1..NumberOfFacilities, j in 1..NumberOfCustomers) (x[i,j] * FacilityToCustomerTransportCost[i,j]);
solve minimize total_cost;

% Output
output [ "Total Cost: " ++ show(total_cost) ++ "\n" ];

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.