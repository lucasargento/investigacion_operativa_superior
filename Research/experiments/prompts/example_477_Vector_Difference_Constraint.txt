You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 477
- Name: Vector Difference Constraint
- Domain: Mathematics
- Objective: satisfaction

Problem Description:
The problem is about enforcing two vectors to differ from at least K positions. Given two vectors, VECTOR1 and VECTOR2, and an integer K, the task is to ensure that VECTOR1 and VECTOR2 differ from at least K positions. For example, if K=2, VECTOR1=<2, 5, 2, 0>, and VECTOR2=<3, 6, 2, 1>, the constraint holds since the first and second vectors differ from 3 positions, which is greater than or equal to K=2.


MiniZinc Model:
int: n = 4;
array[1..n] of var 0..6: a1;
array[1..n] of var 0..6: a2;
var 0..n: k;

predicate differ_from_at_least_k_pos(var int: k, 
                                     array[int] of var int: vector1,
                                     array[int] of var int: vector2) =
      sum(i in index_set(vector1)) (
         bool2int(a1[i] != a2[i])
      ) >= k
;

predicate cp1d(array[int] of var int: x, array[int] of var int: y) =
  assert(index_set(x) = index_set(y),
           "cp1d: x and y have different sizes",
    forall(i in index_set(x)) ( x[i] = y[i] ) )
; 


solve satisfy;


constraint
   cp1d(a1,[2,5,2,0])
   /\
   cp1d(a2,[3,6,2,1])
   /\
   k = 2
   /\
   differ_from_at_least_k_pos(k, a1,a2)
;

output
[
  "a1: " ++ show(a1) ++ "\n" ++
  "a2: " ++ show(a2) ++ "\n" ++
  "k: " ++ show(k) ++ "\n"
];

Expected Output:
{
  "a1": [
    2,
    5,
    2,
    0
  ],
  "a2": [
    3,
    6,
    2,
    1
  ],
  "k": 2
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.