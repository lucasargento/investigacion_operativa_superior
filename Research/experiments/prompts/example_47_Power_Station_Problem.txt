You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 47
- Name: Power Station Problem
- Domain: Energy and Natural Resources
- Objective: minimization

Problem Description:
A number of power stations are committed to meeting the following electricity load demands over a day. Each period of a day has a given demand that must be met. There are several types of generating units available, and each type has its own availability. Each type of generator also has a minimum production level and a maximum production level. There is an hourly cost of running a generator at minimum level and an extra hourly cost for each megawatt at which a generator is operated above the minimum level. These costs are specific to the type of generator. Additionally, starting up a type of generator also involves a cost specific to the type of generator. Which generators should be working in which periods of the day to minimize total cost?


Input Data (data.dzn):
T = 4;
K = 3;
Demand = [15000, 30000, 25000, 40000, 27000];
NumGenerator = [12, 10, 5];
MinLevel = [850, 1250, 1500];
MaxLevel = [2000, 1750, 4000];
RunCost = [1000, 2600, 3000];
ExtraCost = [2.0, 1.3, 3.0];
StartCost = [2000, 1000, 500];

MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 986630.0
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.