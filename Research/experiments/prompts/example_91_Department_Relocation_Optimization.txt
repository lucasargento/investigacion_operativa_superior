You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 91
- Name: Department Relocation Optimization
- Domain: Economic and Business Decisions
- Objective: minimization

Problem Description:
A large company wishes to move some of its departments out of London. There are benefits to be derived from doing this (cheaper housing, government incentives, easier recruitment, etc.), which have been costed. Also, however, there will be greater costs of communication between departments. These have also been costed for all possible locations of each department. The company comprises of several departments. There are several possible cities for relocation, or a department may be kept in London. None of these cities (including London) may be the location for more than three of the departments. For each department, we are given the benefit of relocation to each city (in thousands of pounds). Communication costs are of the form communication_{k, j} * cost_{l, m}, where communication_{k, j} is the quantity of communication between department k and city j and cost{l, m} is the unit cost of communication between city l and city m. Where should each department be located so as to minimize overall yearly cost?


Input Data (data.dzn):
K = 5;
L = 3;
Benefit = array2d(1..5, 1..2, [10, 10, 15, 20, 10, 15, 20, 15, 5, 15]);
Communication = array2d(1..5, 1..5, [0.0, 0.0, 1.0, 1.5, 0.0, 0.0, 0.0, 1.4, 1.2, 0.0, 1.0, 1.4, 0.0, 0.0, 2.0, 1.5, 1.2, 0.0, 2.0, 0.7, 0.0, 0.0, 2.0, 0.7, 0.0]);
Cost = array2d(1..3, 1..3, [5, 14, 13, 15, 5, 9, 13, 9, 10]);


MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 14900.0
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.