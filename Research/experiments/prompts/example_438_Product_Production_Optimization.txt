You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 438
- Name: Product Production Optimization
- Domain: Production Planning
- Objective: maximization

Problem Description:
Consider a production problem. Given a set of products ProductNum. Each product p is produced at a rate of ProductionRate_p tons per hour. There are AvailableHours hours available in a week. The profit per ton for each product p is ProfitPerTon_p. There is a lower limit MinimumSale_p and an upper limit MaximumSale_p on the tons of each product p sold in a week. The problem aims to maximize the total profit from selling all products. It is constrained that the total of hours used by all products may not exceed the hours available. How to decide the tons of each product p to be produced?


Input Data (data.dzn):
ProductNum = 3;
ProductionRate = [200, 140, 160];
ProfitPerTon = [25, 30, 29];
MinimumSale = [1000, 500, 750];
MaximumSale = [6000, 4000, 3500];
AvailableHours = 40;

MiniZinc Model:
% Parameters
int: ProductNum; % Number of products
array[1..ProductNum] of int: ProductionRate; % Production rate of each product
array[1..ProductNum] of int: ProfitPerTon; % Profit per ton for each product
array[1..ProductNum] of int: MinimumSale; % Minimum sale limit for each product
array[1..ProductNum] of int: MaximumSale; % Maximum sale limit for each product
int: AvailableHours; % Available hours in a week

% Decision Variables
array[1..ProductNum] of var MinimumSale[1]..MaximumSale[ProductNum]: TonsProduced; % Tons of each product to be produced

% Objective
var int: TotalProfit = sum(p in 1..ProductNum) (ProfitPerTon[p] * TonsProduced[p]); % Total profit from selling all products

% Constraints
constraint sum(p in 1..ProductNum) (TonsProduced[p] / ProductionRate[p]) <= AvailableHours; % Total hours used by all products may not exceed the available hours

% Solve
solve maximize TotalProfit;

% Output
output [ "Tons of product " ++ show(p) ++ " to be produced: " ++ show(TonsProduced[p]) ++ "\n" | p in 1..ProductNum ];

Expected Output:
{
  "TonsProduced": [
    3500,
    1001,
    2456
  ],
  "_objective": 188754
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.