You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 445
- Name: Production Planning
- Domain: Operations Research
- Objective: maximization

Problem Description:
Consider a production problem. Given a set of products NumProducts and a set of stages NumStages. Each product p has a certain production rate ProductionRate_{p,s} in each stage s and a certain profit ProfitPerTon_p per ton. Each stage s has a certain number of hours StageAvailability_s available per week. There are also lower and upper limits on the tons of each product sold in a week, MinCommitment_p and MaxMarketLimit_p respectively. The problem aims to maximize the total profit from all products. It is constrained that the total number of hours used by all products in each stage s may not exceed the hours available. How to decide the number of tons to be produced for each product p?


Input Data (data.dzn):
NumProducts = 3;
NumStages = 2;
ProductionRate = [|200, 200|, |200, 140|, |200, 160|];
ProfitPerTon = [25, 30, 29];
MinCommitment = [1000, 500, 750];
MaxMarketLimit = [6000, 4000, 3500];
StageAvailability = [35, 40];

MiniZinc Model:
% Parameters
int: NumProducts; % Number of products
int: NumStages; % Number of stages
array[1..NumProducts, 1..NumStages] of int: ProductionRate; % Production rate for each product in each stage
array[1..NumProducts] of int: ProfitPerTon; % Profit per ton for each product
array[1..NumProducts] of int: MinCommitment; % Minimum commitment for each product
array[1..NumProducts] of int: MaxMarketLimit; % Maximum market limit for each product
array[1..NumStages] of int: StageAvailability; % Stage availability for each stage

% Decision Variables
array[1..NumProducts] of var MinCommitment[1..NumProducts]..MaxMarketLimit[1..NumProducts]: TonsProduced; % Tons to be produced for each product

% Objective
maximize sum(p in 1..NumProducts)(ProfitPerTon[p] * TonsProduced[p]);

% Constraints
constraint forall(s in 1..NumStages)(
    sum(p in 1..NumProducts)(TonsProduced[p] / ProductionRate[p,s]) <= StageAvailability[s]
);

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.