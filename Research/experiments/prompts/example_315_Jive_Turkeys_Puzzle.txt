You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 315
- Name: Jive Turkeys Puzzle
- Domain: Integer Programming Puzzles
- Objective: minimization

Problem Description:
The problem is a puzzle named 'Jive turkeys' from Martin Chlond's Integer Programming Puzzles. The problem is to find three integers (x[1], x[2], x[3]) such that they satisfy the following constraints: 

1. All three integers are greater than or equal to 0.
2. The first two integers are less than or equal to 9.
3. The third integer is less than or equal to 1345.
4. The equation 10000*x[1] + 6790 + x[2] = 72*x[3] holds true.

The objective is to minimize the value of the third integer, x[3].


MiniZinc Model:
array[1..3] of var int: x; % >= 0;

solve minimize x[3]; 
constraint
   forall(i in 1..3) (
     x[i] >= 0
   )
   /\
   10000*x[1] + 6790 + x[2] = 72*x[3]
   /\
   forall(i in 1..2) (
     x[i] <= 9
   )
   /\
   x[3] <= 1345
;

output
[
  show(x)
];

Expected Output:
{
  "x": [
    3,
    2,
    511
  ],
  "_objective": 511
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.