You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 9
- Name: Aircraft Assignment Problem
- Domain: Transportation and Logistics
- Objective: minimization

Problem Description:
The Aircraft Assignment Problem aims to assign aircraft to routes in order to minimize the total cost while satisfying demand constraints with available aircraft. The problem involves a set of aircraft and a set of routes. Given the costs of assigning an aircraft to a route, the objective is to minimize the total cost of the assignment. Each aircraft has limited availability and cannot be assigned to more routes than allowed. Each route has a specific demand that must be met, and aircraft have varying capacities that define how many passengers they can carry on a given route. The problem seeks to determine the most cost-effective assignment of aircraft to routes while ensuring all demand constraints are satisfied.


Input Data (data.dzn):
% ----------------------------
% DZN File for Aircraft Assignment
% ----------------------------

% Total number of aircraft and routes
TotalAircraft = 4;
TotalRoutes = 4;

% Availability of each aircraft
Availability = [500, 600, 700, 800];

% Demand for each route
Demand = [200, 300, 400, 500];

% Capacity matrix (Capabilities)
Capacity = array2d(1..TotalAircraft, 1..TotalRoutes,
  [
    100, 200, 300, 400,   % Aircraft 1 capacities for Routes 1..4
    200, 300, 400, 500,   % Aircraft 2
    300, 400, 500, 600,   % Aircraft 3
    400, 500, 600, 700    % Aircraft 4
  ]
);

% Cost matrix
Costs = array2d(1..TotalAircraft, 1..TotalRoutes,
  [
    10, 20, 30, 40,  % Aircraft 1 costs for Routes 1..4
    20, 30, 40, 50,  % Aircraft 2
    30, 40, 50, 60,  % Aircraft 3
    40, 50, 60, 70   % Aircraft 4
  ]
);


MiniZinc Model:
% ============================================================
% AIRCRAFT ASSIGNMENT OPTIMIZATION MODEL
% ============================================================
%
% PROBLEM DESCRIPTION:
% -------------------
% The goal is to assign aircraft to routes in a way that minimizes total assignment cost
% while satisfying the availability of aircraft and the demand for each route.
%
% - Each aircraft has a maximum number of routes it can be assigned to.
% - Each route requires a specific number of aircraft to fulfill passenger demand.
% - Aircraft have different capacities for different routes.
% - Assigning an aircraft to a route incurs a specific cost.
%
% OBJECTIVE:
% ----------
% Determine the optimal assignment of aircraft to routes to **minimize**
% the total cost while ensuring all demand constraints are met.
%
% PARAMETERS PROVIDED IN JSON:
% {
%   "TotalAircraft": <int>, "TotalRoutes": <int>,
%   "Availability": [...], "Demand": [...],
%   "Capacity": [..., ...], "Costs": [..., ...]
% }
% ============================================================


% -----------------------------
% 1) PARAMETERS
% -----------------------------

int: TotalAircraft;   % Total number of available aircraft
int: TotalRoutes;     % Total number of routes

array[1..TotalAircraft] of int: Availability;
  % Availability[i]: Maximum number of routes an aircraft i can be assigned to

array[1..TotalRoutes] of int: Demand;
  % Demand[j]: Number of aircraft required for route j

array[1..TotalAircraft, 1..TotalRoutes] of int: Capacity;
  % Capacity[i,j]: Maximum number of passengers aircraft i can carry on route j

array[1..TotalAircraft, 1..TotalRoutes] of int: Costs;
  % Costs[i,j]: Cost of assigning aircraft i to route j


% -----------------------------
% 2) DECISION VARIABLES
% -----------------------------

% Assignment[i, j] = 1 if aircraft i is assigned to route j, 0 otherwise
array[1..TotalAircraft, 1..TotalRoutes] of var 0..1: Assignment;

% The total cost of assignments
var int: TotalCost;


% -----------------------------
% 3) CONSTRAINTS
% -----------------------------

% (C1) Ensure each route meets its demand exactly
constraint
  forall(j in 1..TotalRoutes) (
    sum(i in 1..TotalAircraft)( Assignment[i,j] ) = Demand[j]
  );

% (C2) Ensure that no aircraft is assigned to more routes than it is available for
constraint
  forall(i in 1..TotalAircraft) (
    sum(j in 1..TotalRoutes)( Assignment[i,j] ) <= Availability[i]
  );

% (C3) Ensure aircraft can only be assigned to routes where they have capacity
constraint
  forall(i in 1..TotalAircraft, j in 1..TotalRoutes) (
    Assignment[i,j] * Capacity[i,j] > 0
  );


% -----------------------------
% 4) OBJECTIVE FUNCTION
% -----------------------------

% Calculate total cost of aircraft assignment
constraint
  TotalCost = sum(i in 1..TotalAircraft, j in 1..TotalRoutes)(
    Assignment[i,j] * Costs[i,j]
  );

% Minimize total assignment cost
solve minimize TotalCost;


% -----------------------------
% 5) OUTPUT
% -----------------------------

% Print the optimal assignments and total cost
output [
    "Optimal Aircraft Assignment:\n",
    "  Aircraft-to-Route Assignments:\n",
    forall(i in 1..TotalAircraft) (
        concat([
            "    Aircraft ", show(i), ": ",
            join([show(Assignment[i,j]) | j in 1..TotalRoutes], " "),
            "\n"
        ])
    ),
    "Total Assignment Cost: ", show(TotalCost), "\n"
];


Expected Output:
{
  "x": [
    2,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ],
  "_objective": 140
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.