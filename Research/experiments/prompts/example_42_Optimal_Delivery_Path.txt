You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 42
- Name: Optimal Delivery Path
- Domain: Transportation and Logistics
- Objective: minimization

Problem Description:
A delivery person starts at the intersection of 1st Avenue and 1st Street and needs to reach the intersection of W th Avenue and N th Street. The path between these two points forms an N-1 Ã— W-1 grid. Each block on the grid has a unique walking time due to varying pedestrian traffic during rush hour. The delivery person can only walk north or west. The journey can be broken down into stages, where at each stage the delivery person decides to walk either north or west. When at an intersection, there is a specific time taken to move to the next street north on the same avenue or to the next avenue west on the same street. Determine the optimal path the delivery person should take to ensure the package is delivered in the least amount of time.


Input Data (data.dzn):
N = 3;
W = 3;
WestTime = array2d(1..3, 1..2, [3.5, 4.5, 4, 4, 5, 4]);
NorthTime = array2d(1..2, 1..3, [10, 10, 9, 9, 9, 12]);


MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 26.5
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.