You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 266
- Name: Coloured Queens
- Domain: Graph Theory
- Objective: satisfaction

Problem Description:
# Problem ColouredQueens

The queens graph is a graph with n*n nodes corresponding to the squares of a chess-board.
There is an edge between nodes iff they are on the same row, column, or diagonal, i.e. if two queens on those squares would attack each other.
The coloring problem is to color the queens graph with n colors.
See paper cited below.

### Example
  An example of a solution for n=7 is:
  ```
     4 5 3 1 2 0 6
     0 6 4 5 3 1 2
     1 2 0 6 4 5 3
     5 3 1 2 0 6 4
     6 4 5 3 1 2 0
     2 0 6 4 5 3 1
     3 1 2 0 6 4 5
  ```

## Data
  A number n, the size of the chessboard

## Model
  constraints: [AllDifferent](http://pycsp.org/documentation/constraints/AllDifferent)

## Execution
  - python ColouredQueens.py -data=number

## Links
  - https://link.springer.com/chapter/10.1007/978-3-540-30210-0_17

## Tags
  academic


MiniZinc Model:
include "globals.mzn";

% Size of the chessboard
int: n = 7;

% Array of variables
array[1..n] of var 0..n-1: queens;

% All elements must be different
constraint alldifferent(queens);

% No two queens are in the same diagonal
constraint forall(i in 1..n)(
  forall(j in i+1..n)(
    abs(queens[i]-queens[j]) != abs(i-j)
  )
);

% Find a solution
solve satisfy;

% Output the solution
output [ "\n" ++ show(queens[i]) | i in 1..n];

Expected Output:
{
  "queens": [
    5,
    3,
    1,
    6,
    4,
    2,
    0
  ]
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.