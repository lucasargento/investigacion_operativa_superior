You are an expert in translating MiniZinc models to Python using OR-Tools. Your task is to translate the following optimization problem:

Problem Information:
- Example Number: 66
- Name: Mine Operation Optimization
- Domain: Energy and Natural Resources
- Objective: maximization

Problem Description:
A mining company is going to continue operating in a certain area for the next years. The company owns several mines in this area, but there's a maximum number of mines it can operate in any one year. Although a mine may not operate in a certain year, it is still necessary to keep it ‘open’, in the sense that royalties are payable, if it be operated in a future year. Clearly, if a mine is not going to be worked again, it can be permanently closed down and no more royalties need be paid. Each mine has a specific yearly royalties payable. Additionally, for each mine, there is an upper limit to the amount of ore, which can be extracted from it in a year. The ore from the different mines is of varying quality. This quality is measured on a scale so that blending ores together results in a linear combination of the quality measurements, for example, if equal quantities of two ores were combined, the resultant ore would have a quality measurement halfway between. We are given the quality of ore extracted from each mine. In each year, it is necessary to combine the total outputs from each mine to produce a blended ore of exactly some stipulated quality. The final blended ore sells for a fixed price per ton each year. Revenue and expenditure for future years must be discounted at a rate of \var{discount} per annum. To maximize profit, which mines should be operated each year and how much should they produce?


Input Data (data.dzn):
K = 4;
MaxWork = 3;
Royalty = [5e+06, 4e+06, 4e+06, 5e+06];
Limit = [2e+06, 2.5e+06, 1.3e+06, 3e+06];
Quality = [1.0, 0.7, 1.5, 0.5];
RequiredQuality = [0.9, 0.8, 1.2, 0.6, 1.0];
Price = 10;
Discount = 0.1;

MiniZinc Model:
% Empty model file

Expected Output:
{
  "_objective": 2142.0
}

Instructions:
1. If a MiniZinc model is provided, translate it directly to Python using OR-Tools.
2. If no MiniZinc model is provided, first create a MiniZinc model and then translate it to Python.
3. The Python code should be complete and executable as-is.
4. Include all necessary imports and dependencies.
5. Define all variables before use.
6. Use explicit loops instead of list comprehensions.
7. Ensure the solution matches the expected output format.
8. Include comments explaining key parts of the implementation.

Please provide the complete Python code that solves this optimization problem using OR-Tools.