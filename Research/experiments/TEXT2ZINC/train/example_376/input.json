{
  "description": "The problem is a variant of the game of Nim, known as Nimatron. The game is played with a number of heaps, each containing a certain number of items. Two players take turns removing items from the heaps, with the goal of forcing the other player to take the last item. In this variant, the maximum number of heaps that can be changed in a move is specified by the parameter 'k'. If 'k' is greater than 1, the game becomes Moore's game. The maximum number allowed in any heap is determined by the parameter 'col', which represents the columns for binary representation of position after move. The goal of the problem is to compute a move to a safe position, if available. A position is considered safe if it is already in a winning position, i.e., a position from which the player can always win the game regardless of the opponent's moves. The problem is to minimize the number of heaps changed. If the solution is zero, then the current position is already safe.",
  "parameters": [],
  "output": [],
  "metadata": {
    "identifier": "",
    "name": "Nimatron Game",
    "domain": "Game Theory",
    "objective": "minimization",
    "source": "hakank",
    "constraints": [
      "forall",
      "sum",
      "ceil",
      "pow",
      "int2float",
      ">=",
      "=",
      "<=",
      "*"
    ]
  },
  "unverified_metadata": {
    "name": "Nimatron Game",
    "domain": "Game Theory",
    "model_var_keywords": [
      "heap",
      "col",
      "k",
      "nmax",
      "n",
      "x",
      "d",
      "s",
      "m",
      "w",
      "heapch"
    ],
    "model_data_keywords": [
      "n"
    ],
    "objective": "minimization",
    "source": "",
    "constraints": [
      "forall",
      "sum",
      "ceil",
      "pow",
      "int2float",
      ">=",
      "=",
      "<=",
      "*"
    ]
  }
}