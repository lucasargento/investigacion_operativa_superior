{
  "description": "---\nTitle:    Social Golfers Problem\nProposer: Warwick Harvey\nCategory: Scheduling and related problems\n---\n\n\nThe coordinator of a local golf club has come to you with the following problem. In their club, there are 32 social golfers, each of whom play golf once a week, and always in groups of 4. They would like you to come up with a schedule of play for these golfers, to last as many weeks as possible, such that no golfer plays in the same group as any other golfer on more than one occasion.\nPossible variants of the above problem include: finding a 10-week schedule with \"maximum socialisation\"; that is, as few repeated pairs as possible (this has the same solutions as the original problem if it is possible to have no repeated pairs), and finding a schedule of minimum length such that each golfer plays with every other golfer at least once (\"full socialisation\").\n\nThe problem can easily be generalized to that of scheduling $m$ groups of $n$ golfers over $p$ weeks, such that no golfer plays in the same group as any other golfer twice (i.e. maximum socialisation is achieved).\n\nThis problem is derived from a question posted to sci.op-research by\nbigwind777@aol.com (Bigwind777) in May 1998. It is a generalisation of the\nproblem of constructing a\nround-robin tournament schedule, where the number\nof players in a \"game\" is\nmore than two. The optimal solution for 32 golfers is not yet known.",
  "parameters": [],
  "output": [],
  "metadata": {
    "identifier": "",
    "name": "Social Golfers Problem",
    "domain": "Scheduling",
    "objective": "satisfaction",
    "source": "hakank",
    "constraints": [
      "card",
      "=",
      "all_disjoint",
      "subset",
      "<=",
      "sum",
      "bool2int"
    ]
  },
  "unverified_metadata": {
    "name": "Social Golfers Problem",
    "domain": "Scheduling",
    "model_var_keywords": [
      "round_group_golfers"
    ],
    "model_data_keywords": [
      "n_groups",
      "n_per_group",
      "n_rounds",
      "n_golfers",
      "groups",
      "group",
      "rounds",
      "golfers"
    ],
    "objective": "satisfy",
    "source": "",
    "constraints": [
      "card",
      "=",
      "all_disjoint",
      "subset",
      "<=",
      "sum",
      "bool2int"
    ]
  }
}